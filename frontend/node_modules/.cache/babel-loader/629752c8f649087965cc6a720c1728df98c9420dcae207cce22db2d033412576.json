{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{useMsal}from'@azure/msal-react';import{toast}from'react-hot-toast';import{apiConfig}from'../authConfig';import{getAccessToken}from'../services/authService';import{TableCellsIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const{instance,accounts}=useMsal();const[tables,setTables]=useState([]);const[loading,setLoading]=useState(true);const[dbInfo,setDbInfo]=useState(null);const[showDbInfo,setShowDbInfo]=useState(false);useEffect(()=>{const fetchTables=async()=>{try{console.log('Dashboard - Fetching tables, accounts:',accounts);// Prima proviamo con l'endpoint di test che non richiede autenticazione\nconst testApiUrl=\"\".concat(apiConfig.baseUrl,\"/debug/test-tables\");console.log('Dashboard - Fetching from test URL:',testApiUrl);const testResponse=await fetch(testApiUrl);if(testResponse.ok){console.log('Dashboard - Test API response status:',testResponse.status);const data=await testResponse.json();console.log('Dashboard - Received tables data from test endpoint:',data);setTables(data);setLoading(false);return;}// Se l'endpoint di test fallisce, proviamo con l'endpoint autenticato\nconsole.log('Dashboard - Test endpoint failed, trying authenticated endpoint');const accessToken=await getAccessToken(instance,accounts[0]);console.log('Dashboard - Got access token, length:',accessToken===null||accessToken===void 0?void 0:accessToken.length);const apiUrl=\"\".concat(apiConfig.baseUrl).concat(apiConfig.endpoints.tables);console.log('Dashboard - Fetching from URL:',apiUrl);const response=await fetch(apiUrl,{headers:{'Authorization':\"Bearer \".concat(accessToken)}});console.log('Dashboard - API response status:',response.status);if(!response.ok){const errorText=await response.text();console.error('Dashboard - Error response body:',errorText);throw new Error(\"Error fetching tables: \".concat(response.status,\" \").concat(response.statusText));}const data=await response.json();console.log('Dashboard - Received tables data:',data);setTables(data);}catch(error){console.error('Dashboard - Failed to fetch tables:',error);toast.error('Failed to load tables. Please try again.');}finally{setLoading(false);}};fetchTables();},[instance,accounts]);const fetchDbInfo=async()=>{try{setLoading(true);const accessToken=await getAccessToken(instance,accounts[0]);const response=await fetch(\"\".concat(apiConfig.baseUrl,\"/debug/db-info\"),{headers:{'Authorization':\"Bearer \".concat(accessToken)}});if(!response.ok){throw new Error(\"Error fetching database info: \".concat(response.status,\" \").concat(response.statusText));}const data=await response.json();console.log('Database info:',data);setDbInfo(data);setShowDbInfo(true);}catch(error){console.error('Failed to fetch database info:',error);toast.error('Failed to load database info. Please try again.');}finally{setLoading(false);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"})});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pb-5 border-b border-gray-200 sm:flex sm:items-center sm:justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg leading-6 font-medium text-gray-900\",children:\"Available Tables\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:fetchDbInfo,className:\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:\"Check Database Connection\"})})]}),showDbInfo&&dbInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 bg-white shadow overflow-hidden sm:rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-4 py-5 sm:px-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg leading-6 font-medium text-gray-900\",children:\"Database Information\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 max-w-2xl text-sm text-gray-500\",children:\"Details about your database connection and tables.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-200 px-4 py-5 sm:p-0\",children:/*#__PURE__*/_jsxs(\"dl\",{className:\"sm:divide-y sm:divide-gray-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500\",children:\"Connection Status\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",children:dbInfo.connection})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500\",children:\"Database Tables\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",children:dbInfo.database_tables.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"border border-gray-200 rounded-md divide-y divide-gray-200\",children:dbInfo.database_tables.map((table,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"pl-3 pr-4 py-3 flex items-center justify-between text-sm\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-0 flex-1 flex items-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 flex-1 w-0 truncate\",children:table})})},index))}):/*#__PURE__*/_jsx(\"p\",{children:\"No tables found in database.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500\",children:\"Table Models\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",children:Array.isArray(dbInfo.table_models)&&dbInfo.table_models.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"border border-gray-200 rounded-md divide-y divide-gray-200\",children:dbInfo.table_models.map((table,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"pl-3 pr-4 py-3 flex items-center justify-between text-sm\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-0 flex-1 flex items-center\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 flex-1 w-0 truncate\",children:[table.name,\" - \",table.description]})})},index))}):/*#__PURE__*/_jsx(\"p\",{children:\"No table models found. This is why you don't see any tables in the UI.\"})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-3 bg-gray-50 text-right sm:px-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowDbInfo(false),className:\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:\"Close\"})})]}),!showDbInfo&&tables.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"No tables available for your account.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-sm text-gray-500\",children:\"Click \\\"Check Database Connection\\\" to diagnose the issue.\"})]}):!showDbInfo&&tables.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3\",children:tables.map(table=>/*#__PURE__*/_jsxs(Link,{to:\"/table/\".concat(table.name),className:\"block bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow duration-300\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 bg-primary-100 rounded-md p-3\",children:/*#__PURE__*/_jsx(TableCellsIcon,{className:\"h-6 w-6 text-primary-600\",\"aria-hidden\":\"true\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-5\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:table.name}),table.description&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500\",children:table.description})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 px-5 py-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-sm\",children:/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-primary-600 hover:text-primary-700\",children:\"View and edit data\"})})})]},table.id))})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Link","useMsal","toast","apiConfig","getAccessToken","TableCellsIcon","jsx","_jsx","jsxs","_jsxs","Dashboard","instance","accounts","tables","setTables","loading","setLoading","dbInfo","setDbInfo","showDbInfo","setShowDbInfo","fetchTables","console","log","testApiUrl","concat","baseUrl","testResponse","fetch","ok","status","data","json","accessToken","length","apiUrl","endpoints","response","headers","errorText","text","error","Error","statusText","fetchDbInfo","className","children","onClick","connection","database_tables","map","table","index","Array","isArray","table_models","name","description","to","id"],"sources":["/Users/robertobutinar/codebase/data_entry_app/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMsal } from '@azure/msal-react';\nimport { toast } from 'react-hot-toast';\nimport { apiConfig } from '../authConfig';\nimport { getAccessToken } from '../services/authService';\nimport { TableCellsIcon } from '@heroicons/react/24/outline';\n\nconst Dashboard = () => {\n  const { instance, accounts } = useMsal();\n  const [tables, setTables] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [dbInfo, setDbInfo] = useState(null);\n  const [showDbInfo, setShowDbInfo] = useState(false);\n  \n  useEffect(() => {\n    const fetchTables = async () => {\n      try {\n        console.log('Dashboard - Fetching tables, accounts:', accounts);\n        \n        // Prima proviamo con l'endpoint di test che non richiede autenticazione\n        const testApiUrl = `${apiConfig.baseUrl}/debug/test-tables`;\n        console.log('Dashboard - Fetching from test URL:', testApiUrl);\n        \n        const testResponse = await fetch(testApiUrl);\n        \n        if (testResponse.ok) {\n          console.log('Dashboard - Test API response status:', testResponse.status);\n          const data = await testResponse.json();\n          console.log('Dashboard - Received tables data from test endpoint:', data);\n          setTables(data);\n          setLoading(false);\n          return;\n        }\n        \n        // Se l'endpoint di test fallisce, proviamo con l'endpoint autenticato\n        console.log('Dashboard - Test endpoint failed, trying authenticated endpoint');\n        const accessToken = await getAccessToken(instance, accounts[0]);\n        console.log('Dashboard - Got access token, length:', accessToken?.length);\n        \n        const apiUrl = `${apiConfig.baseUrl}${apiConfig.endpoints.tables}`;\n        console.log('Dashboard - Fetching from URL:', apiUrl);\n        \n        const response = await fetch(apiUrl, {\n          headers: {\n            'Authorization': `Bearer ${accessToken}`\n          }\n        });\n        \n        console.log('Dashboard - API response status:', response.status);\n        \n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error('Dashboard - Error response body:', errorText);\n          throw new Error(`Error fetching tables: ${response.status} ${response.statusText}`);\n        }\n        \n        const data = await response.json();\n        console.log('Dashboard - Received tables data:', data);\n        setTables(data);\n      } catch (error) {\n        console.error('Dashboard - Failed to fetch tables:', error);\n        toast.error('Failed to load tables. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchTables();\n  }, [instance, accounts]);\n  \n  const fetchDbInfo = async () => {\n    try {\n      setLoading(true);\n      const accessToken = await getAccessToken(instance, accounts[0]);\n      \n      const response = await fetch(`${apiConfig.baseUrl}/debug/db-info`, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Error fetching database info: ${response.status} ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      console.log('Database info:', data);\n      setDbInfo(data);\n      setShowDbInfo(true);\n    } catch (error) {\n      console.error('Failed to fetch database info:', error);\n      toast.error('Failed to load database info. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n      </div>\n    );\n  }\n  \n  return (\n    <div>\n      <div className=\"pb-5 border-b border-gray-200 sm:flex sm:items-center sm:justify-between\">\n        <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Available Tables</h3>\n        <div>\n          <button\n            onClick={fetchDbInfo}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n          >\n            Check Database Connection\n          </button>\n        </div>\n      </div>\n      \n      {showDbInfo && dbInfo && (\n        <div className=\"mt-6 bg-white shadow overflow-hidden sm:rounded-lg\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Database Information</h3>\n            <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">Details about your database connection and tables.</p>\n          </div>\n          <div className=\"border-t border-gray-200 px-4 py-5 sm:p-0\">\n            <dl className=\"sm:divide-y sm:divide-gray-200\">\n              <div className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                <dt className=\"text-sm font-medium text-gray-500\">Connection Status</dt>\n                <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{dbInfo.connection}</dd>\n              </div>\n              <div className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                <dt className=\"text-sm font-medium text-gray-500\">Database Tables</dt>\n                <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                  {dbInfo.database_tables.length > 0 ? (\n                    <ul className=\"border border-gray-200 rounded-md divide-y divide-gray-200\">\n                      {dbInfo.database_tables.map((table, index) => (\n                        <li key={index} className=\"pl-3 pr-4 py-3 flex items-center justify-between text-sm\">\n                          <div className=\"w-0 flex-1 flex items-center\">\n                            <span className=\"ml-2 flex-1 w-0 truncate\">{table}</span>\n                          </div>\n                        </li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <p>No tables found in database.</p>\n                  )}\n                </dd>\n              </div>\n              <div className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                <dt className=\"text-sm font-medium text-gray-500\">Table Models</dt>\n                <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                  {Array.isArray(dbInfo.table_models) && dbInfo.table_models.length > 0 ? (\n                    <ul className=\"border border-gray-200 rounded-md divide-y divide-gray-200\">\n                      {dbInfo.table_models.map((table, index) => (\n                        <li key={index} className=\"pl-3 pr-4 py-3 flex items-center justify-between text-sm\">\n                          <div className=\"w-0 flex-1 flex items-center\">\n                            <span className=\"ml-2 flex-1 w-0 truncate\">{table.name} - {table.description}</span>\n                          </div>\n                        </li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <p>No table models found. This is why you don't see any tables in the UI.</p>\n                  )}\n                </dd>\n              </div>\n            </dl>\n          </div>\n          <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n            <button\n              onClick={() => setShowDbInfo(false)}\n              className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {!showDbInfo && tables.length === 0 ? (\n        <div className=\"mt-6 text-center\">\n          <p className=\"text-gray-500\">No tables available for your account.</p>\n          <p className=\"mt-2 text-sm text-gray-500\">Click \"Check Database Connection\" to diagnose the issue.</p>\n        </div>\n      ) : (!showDbInfo && tables.length > 0 && (\n        <div className=\"mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3\">\n          {tables.map((table) => (\n            <Link\n              key={table.id}\n              to={`/table/${table.name}`}\n              className=\"block bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow duration-300\"\n            >\n              <div className=\"p-5\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0 bg-primary-100 rounded-md p-3\">\n                    <TableCellsIcon className=\"h-6 w-6 text-primary-600\" aria-hidden=\"true\" />\n                  </div>\n                  <div className=\"ml-5\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">{table.name}</h3>\n                    {table.description && (\n                      <p className=\"mt-1 text-sm text-gray-500\">{table.description}</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"bg-gray-50 px-5 py-3\">\n                <div className=\"text-sm\">\n                  <span className=\"font-medium text-primary-600 hover:text-primary-700\">\n                    View and edit data\n                  </span>\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}