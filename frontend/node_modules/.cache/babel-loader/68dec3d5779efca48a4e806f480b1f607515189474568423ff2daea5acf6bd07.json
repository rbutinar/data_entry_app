{"ast":null,"code":"// MSAL configuration\nexport const msalConfig={auth:{clientId:\"0ed8cf17-a7f1-4e23-b869-d19777fba7cc\",// Use the same client ID as in .env\nauthority:\"https://login.microsoftonline.com/f66009f9-3aae-4a4e-9161-974b63e7eb6a\",// Use tenant ID from .env\nredirectUri:\"http://localhost:3000\",postLogoutRedirectUri:\"http://localhost:3000\",navigateToLoginRequestUrl:true},cache:{cacheLocation:\"sessionStorage\",storeAuthStateInCookie:true},system:{loggerOptions:{loggerCallback:(level,message,containsPii)=>{if(containsPii){return;}switch(level){case 0:console.error(message);return;case 1:console.warn(message);return;case 2:console.info(message);return;case 3:console.debug(message);return;default:return;}},logLevel:3// Set to 3 for verbose logging during development\n}}};// Scopes for token request\nexport const loginRequest={scopes:[\"User.Read\",\"openid\",\"profile\",\"email\"]};// API endpoints\nexport const apiConfig={baseUrl:\"http://localhost:8000\",// FastAPI backend URL\nendpoints:{tables:\"/tables/\",data:\"/data/\",me:\"/me\"}};","map":{"version":3,"names":["msalConfig","auth","clientId","authority","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","console","error","warn","info","debug","logLevel","loginRequest","scopes","apiConfig","baseUrl","endpoints","tables","data","me"],"sources":["/Users/robertobutinar/codebase/data_entry_app/frontend/src/authConfig.js"],"sourcesContent":["// MSAL configuration\nexport const msalConfig = {\n  auth: {\n    clientId: \"0ed8cf17-a7f1-4e23-b869-d19777fba7cc\", // Use the same client ID as in .env\n    authority: \"https://login.microsoftonline.com/f66009f9-3aae-4a4e-9161-974b63e7eb6a\", // Use tenant ID from .env\n    redirectUri: \"http://localhost:3000\",\n    postLogoutRedirectUri: \"http://localhost:3000\",\n    navigateToLoginRequestUrl: true,\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    storeAuthStateInCookie: true,\n  },\n  system: {\n    loggerOptions: {\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n        switch (level) {\n          case 0:\n            console.error(message);\n            return;\n          case 1:\n            console.warn(message);\n            return;\n          case 2:\n            console.info(message);\n            return;\n          case 3:\n            console.debug(message);\n            return;\n          default:\n            return;\n        }\n      },\n      logLevel: 3, // Set to 3 for verbose logging during development\n    },\n  },\n};\n\n// Scopes for token request\nexport const loginRequest = {\n  scopes: [\"User.Read\", \"openid\", \"profile\", \"email\"]\n};\n\n// API endpoints\nexport const apiConfig = {\n  baseUrl: \"http://localhost:8000\", // FastAPI backend URL\n  endpoints: {\n    tables: \"/tables/\",\n    data: \"/data/\",\n    me: \"/me\"\n  }\n};\n"],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,UAAU,CAAG,CACxBC,IAAI,CAAE,CACJC,QAAQ,CAAE,sCAAsC,CAAE;AAClDC,SAAS,CAAE,wEAAwE,CAAE;AACrFC,WAAW,CAAE,uBAAuB,CACpCC,qBAAqB,CAAE,uBAAuB,CAC9CC,yBAAyB,CAAE,IAC7B,CAAC,CACDC,KAAK,CAAE,CACLC,aAAa,CAAE,gBAAgB,CAC/BC,sBAAsB,CAAE,IAC1B,CAAC,CACDC,MAAM,CAAE,CACNC,aAAa,CAAE,CACbC,cAAc,CAAEA,CAACC,KAAK,CAAEC,OAAO,CAAEC,WAAW,GAAK,CAC/C,GAAIA,WAAW,CAAE,CACf,OACF,CACA,OAAQF,KAAK,EACX,IAAK,EAAC,CACJG,OAAO,CAACC,KAAK,CAACH,OAAO,CAAC,CACtB,OACF,IAAK,EAAC,CACJE,OAAO,CAACE,IAAI,CAACJ,OAAO,CAAC,CACrB,OACF,IAAK,EAAC,CACJE,OAAO,CAACG,IAAI,CAACL,OAAO,CAAC,CACrB,OACF,IAAK,EAAC,CACJE,OAAO,CAACI,KAAK,CAACN,OAAO,CAAC,CACtB,OACF,QACE,OACJ,CACF,CAAC,CACDO,QAAQ,CAAE,CAAG;AACf,CACF,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,CAC1BC,MAAM,CAAE,CAAC,WAAW,CAAE,QAAQ,CAAE,SAAS,CAAE,OAAO,CACpD,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,SAAS,CAAG,CACvBC,OAAO,CAAE,uBAAuB,CAAE;AAClCC,SAAS,CAAE,CACTC,MAAM,CAAE,UAAU,CAClBC,IAAI,CAAE,QAAQ,CACdC,EAAE,CAAE,KACN,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}