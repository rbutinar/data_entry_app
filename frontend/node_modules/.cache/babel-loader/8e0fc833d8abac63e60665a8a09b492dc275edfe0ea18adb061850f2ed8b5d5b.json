{"ast":null,"code":"import { loginRequest } from '../authConfig';\n\n/**\n * Get an access token for the API\n * @param {Object} instance - MSAL instance\n * @param {Object} account - User account\n * @returns {Promise<string>} Access token\n */\nexport const getAccessToken = async (instance, account) => {\n  if (!account) {\n    throw new Error('No active account! Verify a user has been signed in.');\n  }\n  try {\n    // Get access token silently\n    const response = await instance.acquireTokenSilent({\n      ...loginRequest,\n      account: account\n    });\n    return response.accessToken;\n  } catch (error) {\n    // If silent token acquisition fails, try interactive method\n    if (error.name === 'InteractionRequiredAuthError') {\n      try {\n        const response = await instance.acquireTokenRedirect(loginRequest);\n        return response.accessToken;\n      } catch (err) {\n        console.error('Error during interactive token acquisition:', err);\n        throw err;\n      }\n    } else {\n      console.error('Error during silent token acquisition:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["loginRequest","getAccessToken","instance","account","Error","response","acquireTokenSilent","accessToken","error","name","acquireTokenRedirect","err","console"],"sources":["/Users/robertobutinar/codebase/data_entry_app/frontend/src/services/authService.js"],"sourcesContent":["import { loginRequest } from '../authConfig';\n\n/**\n * Get an access token for the API\n * @param {Object} instance - MSAL instance\n * @param {Object} account - User account\n * @returns {Promise<string>} Access token\n */\nexport const getAccessToken = async (instance, account) => {\n  if (!account) {\n    throw new Error('No active account! Verify a user has been signed in.');\n  }\n  \n  try {\n    // Get access token silently\n    const response = await instance.acquireTokenSilent({\n      ...loginRequest,\n      account: account\n    });\n    \n    return response.accessToken;\n  } catch (error) {\n    // If silent token acquisition fails, try interactive method\n    if (error.name === 'InteractionRequiredAuthError') {\n      try {\n        const response = await instance.acquireTokenRedirect(loginRequest);\n        return response.accessToken;\n      } catch (err) {\n        console.error('Error during interactive token acquisition:', err);\n        throw err;\n      }\n    } else {\n      console.error('Error during silent token acquisition:', error);\n      throw error;\n    }\n  }\n};\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,eAAe;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,KAAK;EACzD,IAAI,CAACA,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EACzE;EAEA,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,kBAAkB,CAAC;MACjD,GAAGN,YAAY;MACfG,OAAO,EAAEA;IACX,CAAC,CAAC;IAEF,OAAOE,QAAQ,CAACE,WAAW;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACC,IAAI,KAAK,8BAA8B,EAAE;MACjD,IAAI;QACF,MAAMJ,QAAQ,GAAG,MAAMH,QAAQ,CAACQ,oBAAoB,CAACV,YAAY,CAAC;QAClE,OAAOK,QAAQ,CAACE,WAAW;MAC7B,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZC,OAAO,CAACJ,KAAK,CAAC,6CAA6C,EAAEG,GAAG,CAAC;QACjE,MAAMA,GAAG;MACX;IACF,CAAC,MAAM;MACLC,OAAO,CAACJ,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}